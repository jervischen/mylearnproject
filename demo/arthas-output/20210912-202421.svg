<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (3,594 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>com/asyncprofiler/HotCode.main (3,279 samples, 91.24%)</title><rect x="10.0" y="1251.0" width="1076.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="1262.0">com/asyncprofiler/HotCode.main</text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (4 samples, 0.11%)</title><rect x="604.9" y="1235.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.9" y="1246.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (4 samples, 0.11%)</title><rect x="604.9" y="1219.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="607.9" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.06%)</title><rect x="604.9" y="1203.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="607.9" y="1214.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.06%)</title><rect x="604.9" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="607.9" y="1198.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.06%)</title><rect x="604.9" y="1171.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="607.9" y="1182.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.06%)</title><rect x="604.9" y="1155.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="607.9" y="1166.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.06%)</title><rect x="604.9" y="1139.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="607.9" y="1150.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="605.6" y="1203.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="608.6" y="1214.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="605.6" y="1187.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="608.6" y="1198.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="605.9" y="1203.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="608.9" y="1214.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.03%)</title><rect x="605.9" y="1187.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="608.9" y="1198.0"></text>
</g>
<g>
<title>YieldingFlexibleGangWorker::~YieldingFlexibleGangWorker() (1 samples, 0.03%)</title><rect x="606.2" y="1235.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="609.2" y="1246.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="606.6" y="1235.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="609.6" y="1246.0"></text>
</g>
<g>
<title>com/asyncprofiler/HotCode.allocate (15 samples, 0.42%)</title><rect x="606.9" y="1235.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.9" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="607.2" y="1219.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="610.2" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.36%)</title><rect x="607.6" y="1219.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="610.6" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.19%)</title><rect x="607.9" y="1203.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="610.9" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (6 samples, 0.17%)</title><rect x="607.9" y="1187.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="610.9" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_noinit(KlassHandle, unsigned long, Thread*) (4 samples, 0.11%)</title><rect x="608.5" y="1171.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="611.5" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (3 samples, 0.08%)</title><rect x="608.5" y="1155.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="611.5" y="1166.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.03%)</title><rect x="609.5" y="1155.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="612.5" y="1166.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.03%)</title><rect x="609.5" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="612.5" y="1150.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="609.5" y="1123.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="612.5" y="1134.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="609.5" y="1107.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="612.5" y="1118.0"></text>
</g>
<g>
<title>arrayOopDesc::max_array_length(BasicType) (1 samples, 0.03%)</title><rect x="609.8" y="1187.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="612.8" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.03%)</title><rect x="610.2" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="613.2" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans(JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="610.2" y="1187.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="613.2" y="1198.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.11%)</title><rect x="610.5" y="1203.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="613.5" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (4 samples, 0.11%)</title><rect x="610.5" y="1187.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="613.5" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_noinit(KlassHandle, unsigned long, Thread*) (2 samples, 0.06%)</title><rect x="611.2" y="1171.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="614.2" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (2 samples, 0.06%)</title><rect x="611.2" y="1155.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="614.2" y="1166.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="611.2" y="1139.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="614.2" y="1150.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::make_parsable(bool) (1 samples, 0.03%)</title><rect x="611.5" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="614.5" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (1 samples, 0.03%)</title><rect x="611.5" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="614.5" y="1134.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="611.5" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="614.5" y="1118.0"></text>
</g>
<g>
<title>com/asyncprofiler/HotCode.hotmethod1 (3 samples, 0.08%)</title><rect x="611.8" y="1235.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (3 samples, 0.08%)</title><rect x="611.8" y="1219.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (1 samples, 0.03%)</title><rect x="611.8" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.8" y="1214.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.03%)</title><rect x="611.8" y="1187.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="614.8" y="1198.0"></text>
</g>
<g>
<title>java/util/Random.seedUniquifier (2 samples, 0.06%)</title><rect x="612.1" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.1" y="1214.0"></text>
</g>
<g>
<title>GraphKit::use_ReduceInitialCardMarks() (1 samples, 0.03%)</title><rect x="612.1" y="1187.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="615.1" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="612.5" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="615.5" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_store_pre_barrier(JavaThread*) (1 samples, 0.03%)</title><rect x="612.5" y="1171.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="615.5" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="612.5" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="615.5" y="1166.0"></text>
</g>
<g>
<title>com/asyncprofiler/HotCode.hotmethod3 (1,404 samples, 39.07%)</title><rect x="612.8" y="1235.0" width="461.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.8" y="1246.0">com/asyncprofiler/HotCode.hotmethod3</text>
</g>
<g>
<title>java/lang/String.replace (600 samples, 16.69%)</title><rect x="612.8" y="1219.0" width="197.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.8" y="1230.0">java/lang/String.replace</text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (313 samples, 8.71%)</title><rect x="612.8" y="1203.0" width="102.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.8" y="1214.0">java/util/re..</text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.03%)</title><rect x="671.6" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="674.6" y="1198.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="671.6" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="674.6" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="671.6" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="674.6" y="1166.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="671.6" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.6" y="1150.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="671.6" y="1123.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="674.6" y="1134.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="671.6" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="674.6" y="1118.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="671.6" y="1091.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="674.6" y="1102.0"></text>
</g>
<g>
<title>arrayof_jint_fill (18 samples, 0.50%)</title><rect x="671.9" y="1187.0" width="5.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="674.9" y="1198.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.appendReplacement (110 samples, 3.06%)</title><rect x="677.8" y="1187.0" width="36.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.8" y="1198.0">jav..</text>
</g>
<g>
<title>java/lang/StringBuffer.append (7 samples, 0.19%)</title><rect x="678.5" y="1171.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.19%)</title><rect x="678.5" y="1155.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="680.4" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="680.4" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.4" y="1134.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.03%)</title><rect x="680.4" y="1107.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="683.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (101 samples, 2.81%)</title><rect x="680.8" y="1171.0" width="33.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.8" y="1182.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (101 samples, 2.81%)</title><rect x="680.8" y="1155.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.8" y="1166.0">ja..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (4 samples, 0.11%)</title><rect x="712.6" y="1139.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="715.6" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (2 samples, 0.06%)</title><rect x="713.9" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.9" y="1198.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="714.6" y="1187.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="717.6" y="1198.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (287 samples, 7.99%)</title><rect x="715.6" y="1203.0" width="94.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.6" y="1214.0">java/util/r..</text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (287 samples, 7.99%)</title><rect x="715.6" y="1187.0" width="94.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.6" y="1198.0">java/util/r..</text>
</g>
<g>
<title>java/util/regex/Pattern.compile (57 samples, 1.59%)</title><rect x="772.7" y="1171.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.7" y="1182.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.&lt;init&gt; (57 samples, 1.59%)</title><rect x="772.7" y="1155.0" width="18.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.7" y="1166.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$SliceNode.study (52 samples, 1.45%)</title><rect x="774.3" y="1139.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.3" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Node.study (52 samples, 1.45%)</title><rect x="774.3" y="1123.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.3" y="1134.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Node.study (52 samples, 1.45%)</title><rect x="774.3" y="1107.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.3" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.11%)</title><rect x="791.4" y="1171.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="794.4" y="1182.0"></text>
</g>
<g>
<title>jshort_arraycopy (6 samples, 0.17%)</title><rect x="792.7" y="1171.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="795.7" y="1182.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (46 samples, 1.28%)</title><rect x="794.7" y="1171.0" width="15.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="797.7" y="1182.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (781 samples, 21.73%)</title><rect x="809.8" y="1219.0" width="256.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.8" y="1230.0">java/util/UUID.randomUUID</text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.03%)</title><rect x="828.5" y="1203.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="831.5" y="1214.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="828.5" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="831.5" y="1198.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="828.5" y="1171.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="831.5" y="1182.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="828.5" y="1155.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="831.5" y="1166.0"></text>
</g>
<g>
<title>arrayof_jint_fill (11 samples, 0.31%)</title><rect x="828.8" y="1203.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="831.8" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureRandom.nextBytes (704 samples, 19.59%)</title><rect x="832.5" y="1203.0" width="231.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.5" y="1214.0">java/security/SecureRandom.next..</text>
</g>
<g>
<title>sun/security/provider/NativePRNG.engineNextBytes (704 samples, 19.59%)</title><rect x="832.5" y="1187.0" width="231.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.5" y="1198.0">sun/security/provider/NativePRN..</text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.access$400 (704 samples, 19.59%)</title><rect x="832.5" y="1171.0" width="231.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.5" y="1182.0">sun/security/provider/NativePRN..</text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.implNextBytes (704 samples, 19.59%)</title><rect x="832.5" y="1155.0" width="231.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.5" y="1166.0">sun/security/provider/NativePRN..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.17%)</title><rect x="837.4" y="1139.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="1150.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="839.3" y="1139.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="842.3" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="839.7" y="1139.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="842.7" y="1150.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.ensureBufferValid (394 samples, 10.96%)</title><rect x="840.3" y="1139.0" width="129.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.3" y="1150.0">sun/security/pro..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="840.3" y="1123.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="843.3" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.25%)</title><rect x="840.7" y="1123.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="843.7" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.19%)</title><rect x="841.3" y="1107.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="844.3" y="1118.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (7 samples, 0.19%)</title><rect x="841.3" y="1091.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="844.3" y="1102.0"></text>
</g>
<g>
<title>_res (4 samples, 0.11%)</title><rect x="842.3" y="1075.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.3" y="1086.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.readFully (384 samples, 10.68%)</title><rect x="843.6" y="1123.0" width="126.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.6" y="1134.0">sun/security/pro..</text>
</g>
<g>
<title>java/io/FileInputStream.read (384 samples, 10.68%)</title><rect x="843.6" y="1107.0" width="126.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.6" y="1118.0">java/io/FileInpu..</text>
</g>
<g>
<title>java/io/FileInputStream.readBytes (340 samples, 9.46%)</title><rect x="847.6" y="1091.0" width="111.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.6" y="1102.0">java/io/FileI..</text>
</g>
<g>
<title>readBytes (340 samples, 9.46%)</title><rect x="847.6" y="1075.0" width="111.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="850.6" y="1086.0">readBytes</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.03%)</title><rect x="847.6" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="850.6" y="1070.0"></text>
</g>
<g>
<title>madvise (1 samples, 0.03%)</title><rect x="847.9" y="1059.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="850.9" y="1070.0"></text>
</g>
<g>
<title>read (338 samples, 9.40%)</title><rect x="848.2" y="1059.0" width="111.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="851.2" y="1070.0">read</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="959.2" y="1091.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="962.2" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.25%)</title><rect x="959.5" y="1091.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="962.5" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (22 samples, 0.61%)</title><rect x="962.5" y="1091.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.5" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (18 samples, 0.50%)</title><rect x="963.1" y="1075.0" width="5.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="966.1" y="1086.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (15 samples, 0.42%)</title><rect x="964.1" y="1059.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="967.1" y="1070.0"></text>
</g>
<g>
<title>_res (12 samples, 0.33%)</title><rect x="965.1" y="1043.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="968.1" y="1054.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.06%)</title><rect x="969.0" y="1075.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="972.0" y="1086.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.engineNextBytes (286 samples, 7.96%)</title><rect x="969.7" y="1139.0" width="93.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.7" y="1150.0">sun/securit..</text>
</g>
<g>
<title>java/security/MessageDigest.digest (231 samples, 6.43%)</title><rect x="985.5" y="1123.0" width="75.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.5" y="1134.0">java/sec..</text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (231 samples, 6.43%)</title><rect x="985.5" y="1107.0" width="75.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.5" y="1118.0">java/sec..</text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (231 samples, 6.43%)</title><rect x="985.5" y="1091.0" width="75.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.5" y="1102.0">sun/secu..</text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (231 samples, 6.43%)</title><rect x="985.5" y="1075.0" width="75.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.5" y="1086.0">sun/secu..</text>
</g>
<g>
<title>arrayof_jbyte_fill (3 samples, 0.08%)</title><rect x="994.3" y="1059.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="997.3" y="1070.0"></text>
</g>
<g>
<title>arrayof_jint_fill (8 samples, 0.22%)</title><rect x="995.3" y="1059.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="998.3" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.17%)</title><rect x="997.9" y="1059.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1000.9" y="1070.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implDigest (187 samples, 5.20%)</title><rect x="999.9" y="1059.0" width="61.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.9" y="1070.0">sun/se..</text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (9 samples, 0.25%)</title><rect x="1000.6" y="1043.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.6" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.17%)</title><rect x="1001.5" y="1027.0" width="2.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1004.5" y="1038.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (7 samples, 0.19%)</title><rect x="1003.5" y="1043.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.5" y="1054.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.implCompressMultiBlock (7 samples, 0.19%)</title><rect x="1003.5" y="1027.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.5" y="1038.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress (169 samples, 4.70%)</title><rect x="1005.8" y="1043.0" width="55.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.8" y="1054.0">sun/s..</text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (8 samples, 0.22%)</title><rect x="1058.7" y="1027.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.7" y="1038.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (1 samples, 0.03%)</title><rect x="1061.3" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.3" y="1134.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (1 samples, 0.03%)</title><rect x="1061.3" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.3" y="1118.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (1 samples, 0.03%)</title><rect x="1061.3" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.3" y="1102.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.implCompressMultiBlock (1 samples, 0.03%)</title><rect x="1061.3" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.3" y="1086.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.updateState (6 samples, 0.17%)</title><rect x="1061.6" y="1123.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.6" y="1134.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (8 samples, 0.22%)</title><rect x="1063.6" y="1203.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1066.6" y="1214.0"></text>
</g>
<g>
<title>java/util/UUID.toString (23 samples, 0.64%)</title><rect x="1066.2" y="1219.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.2" y="1230.0"></text>
</g>
<g>
<title>java/util/UUID.digits (23 samples, 0.64%)</title><rect x="1066.2" y="1203.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Long.toHexString (23 samples, 0.64%)</title><rect x="1066.2" y="1187.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Long.toUnsignedString0 (23 samples, 0.64%)</title><rect x="1066.2" y="1171.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/Long.formatUnsignedLong (23 samples, 0.64%)</title><rect x="1066.2" y="1155.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.2" y="1166.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (39 samples, 1.09%)</title><rect x="1073.8" y="1235.0" width="12.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1076.8" y="1246.0"></text>
</g>
<g>
<title>_res (25 samples, 0.70%)</title><rect x="1078.4" y="1219.0" width="8.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1081.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 1.14%)</title><rect x="1086.6" y="1251.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.6" y="1262.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/FastThreadLocalRunnable.run (38 samples, 1.06%)</title><rect x="1086.6" y="1235.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.6" y="1246.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThreadExecutorMap$2.run (38 samples, 1.06%)</title><rect x="1086.6" y="1219.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="1230.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor$4.run (38 samples, 1.06%)</title><rect x="1086.6" y="1203.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.6" y="1214.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.run (38 samples, 1.06%)</title><rect x="1086.6" y="1187.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.6" y="1198.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeys (30 samples, 0.83%)</title><rect x="1086.6" y="1171.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.6" y="1182.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (30 samples, 0.83%)</title><rect x="1086.6" y="1155.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.6" y="1166.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKey (30 samples, 0.83%)</title><rect x="1086.6" y="1139.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.6" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (28 samples, 0.78%)</title><rect x="1086.6" y="1123.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.6" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.fireChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1107.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.6" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1091.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.6" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1075.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.6" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1059.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1043.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.6" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1027.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.6" y="1038.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (28 samples, 0.78%)</title><rect x="1086.6" y="1011.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.6" y="1022.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/httptelnet/ProtocolDetectHandler.channelRead (8 samples, 0.22%)</title><rect x="1086.6" y="995.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.6" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (2 samples, 0.06%)</title><rect x="1086.6" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.6" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (2 samples, 0.06%)</title><rect x="1086.6" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.6" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (2 samples, 0.06%)</title><rect x="1086.6" y="947.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.6" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (2 samples, 0.06%)</title><rect x="1086.6" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.6" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (2 samples, 0.06%)</title><rect x="1086.6" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.6" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1086.6" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.6" y="910.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.03%)</title><rect x="1086.6" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.6" y="894.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.03%)</title><rect x="1086.6" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.6" y="878.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1086.6" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.6" y="862.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle, StackMapTable*, Thread*) (1 samples, 0.03%)</title><rect x="1086.6" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.6" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.03%)</title><rect x="1086.9" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.9" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.03%)</title><rect x="1086.9" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.9" y="894.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1086.9" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.9" y="878.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle, StackMapTable*, Thread*) (1 samples, 0.03%)</title><rect x="1086.9" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.9" y="862.0"></text>
</g>
<g>
<title>VerificationType::is_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.03%)</title><rect x="1086.9" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.9" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.03%)</title><rect x="1087.2" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.2" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1087.2" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.2" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1087.2" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.2" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/CombinedChannelDuplexHandler.channelRead (1 samples, 0.03%)</title><rect x="1087.2" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.2" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/ByteToMessageDecoder.channelRead (1 samples, 0.03%)</title><rect x="1087.2" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.2" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/ByteToMessageDecoder.callDecode (1 samples, 0.03%)</title><rect x="1087.2" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.2" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (1 samples, 0.03%)</title><rect x="1087.2" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.2" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpServerCodec$HttpServerRequestDecoder.decode (1 samples, 0.03%)</title><rect x="1087.2" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.2" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.decode (1 samples, 0.03%)</title><rect x="1087.2" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.2" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (1 samples, 0.03%)</title><rect x="1087.2" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1087.2" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.2" y="830.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1087.2" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.2" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.03%)</title><rect x="1087.2" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.2" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="1087.2" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.2" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1087.2" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.2" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1087.2" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.2" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.03%)</title><rect x="1087.2" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1087.2" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.2" y="718.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.03%)</title><rect x="1087.2" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.2" y="702.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.03%)</title><rect x="1087.2" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.2" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.03%)</title><rect x="1087.2" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.2" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytes (1 samples, 0.03%)</title><rect x="1087.2" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.2" y="654.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytes (1 samples, 0.03%)</title><rect x="1087.2" y="627.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1090.2" y="638.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.03%)</title><rect x="1087.2" y="611.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1090.2" y="622.0"></text>
</g>
<g>
<title>inflateCodesUsed (1 samples, 0.03%)</title><rect x="1087.2" y="595.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1090.2" y="606.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.addLast (1 samples, 0.03%)</title><rect x="1087.6" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.6" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.addLast (1 samples, 0.03%)</title><rect x="1087.6" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.6" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.addLast (1 samples, 0.03%)</title><rect x="1087.6" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.callHandlerAdded0 (1 samples, 0.03%)</title><rect x="1087.6" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.callHandlerAdded (1 samples, 0.03%)</title><rect x="1087.6" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.6" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.handlerAdded (1 samples, 0.03%)</title><rect x="1087.6" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.6" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1087.6" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.6" y="894.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1087.6" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.6" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.03%)</title><rect x="1087.6" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.6" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="1087.6" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.6" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1087.6" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1087.6" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.6" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.03%)</title><rect x="1087.6" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.6" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1087.6" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.6" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1087.6" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1087.6" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.03%)</title><rect x="1087.6" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.03%)</title><rect x="1087.6" y="707.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1090.6" y="718.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.03%)</title><rect x="1087.6" y="691.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1090.6" y="702.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*) (1 samples, 0.03%)</title><rect x="1087.6" y="675.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1090.6" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*) (1 samples, 0.03%)</title><rect x="1087.6" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.6" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.03%)</title><rect x="1087.6" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.6" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(Thread*) (1 samples, 0.03%)</title><rect x="1087.6" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1090.6" y="638.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_and_type_ref_index_at(int, bool) (1 samples, 0.03%)</title><rect x="1087.6" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1090.6" y="622.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectAggregator.&lt;clinit&gt; (2 samples, 0.06%)</title><rect x="1087.9" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.9" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.9" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.9" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.9" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.9" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.9" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.9" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.9" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.9" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.03%)</title><rect x="1087.9" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.9" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.9" y="782.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.9" y="766.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.9" y="750.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.9" y="734.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle, StackMapTable*, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.9" y="718.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.9" y="702.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1087.9" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.9" y="686.0"></text>
</g>
<g>
<title>SymbolTable::hash_symbol(char const*, int) (1 samples, 0.03%)</title><rect x="1087.9" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1088.2" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.2" y="974.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1088.2" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.2" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.03%)</title><rect x="1088.2" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.2" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="1088.2" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.2" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1088.2" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.2" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1088.2" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.2" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.03%)</title><rect x="1088.2" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.2" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1088.2" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.2" y="862.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.03%)</title><rect x="1088.2" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.2" y="846.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.03%)</title><rect x="1088.2" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.2" y="830.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.03%)</title><rect x="1088.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.2" y="814.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.03%)</title><rect x="1088.2" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.2" y="798.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.access$1400 (1 samples, 0.03%)</title><rect x="1088.2" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.2" y="782.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.read (1 samples, 0.03%)</title><rect x="1088.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.2" y="766.0"></text>
</g>
<g>
<title>Java_java_util_zip_ZipFile_read (1 samples, 0.03%)</title><rect x="1088.2" y="739.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1091.2" y="750.0"></text>
</g>
<g>
<title>ZIP_Read (1 samples, 0.03%)</title><rect x="1088.2" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1091.2" y="734.0"></text>
</g>
<g>
<title>ZIP_GetEntryDataOffset (1 samples, 0.03%)</title><rect x="1088.2" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1091.2" y="718.0"></text>
</g>
<g>
<title>read (1 samples, 0.03%)</title><rect x="1088.2" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1091.2" y="702.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.5" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.5" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpServerCodec$HttpServerRequestDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.5" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpRequestDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.5" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.5" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.5" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.5" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1088.5" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.5" y="862.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1088.5" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.03%)</title><rect x="1088.5" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.5" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="1088.5" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.5" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1088.5" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.5" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1088.5" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.5" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.03%)</title><rect x="1088.5" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.5" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1088.5" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.5" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1088.5" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1088.5" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.03%)</title><rect x="1088.5" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.5" y="702.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.03%)</title><rect x="1088.5" y="675.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1091.5" y="686.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.03%)</title><rect x="1088.5" y="659.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1091.5" y="670.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*) (1 samples, 0.03%)</title><rect x="1088.5" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1091.5" y="654.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*) (1 samples, 0.03%)</title><rect x="1088.5" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1091.5" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.03%)</title><rect x="1088.5" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.5" y="622.0"></text>
</g>
<g>
<title>Verifier::relax_verify_for(oopDesc*) (1 samples, 0.03%)</title><rect x="1088.5" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1091.5" y="606.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::is_trusted_loader(oopDesc*) (1 samples, 0.03%)</title><rect x="1088.5" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1091.5" y="590.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (1 samples, 0.03%)</title><rect x="1088.5" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1091.5" y="574.0"></text>
</g>
<g>
<title>Klass::is_subtype_of(Klass*) const (1 samples, 0.03%)</title><rect x="1088.5" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1091.5" y="558.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/HttpRequestHandler.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.9" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.9" y="990.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/HttpRequestHandler.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1088.9" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.9" y="974.0"></text>
</g>
<g>
<title>java/io/File.mkdirs (1 samples, 0.03%)</title><rect x="1088.9" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.9" y="958.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.03%)</title><rect x="1088.9" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.9" y="942.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.03%)</title><rect x="1088.9" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.9" y="926.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.03%)</title><rect x="1088.9" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.9" y="910.0"></text>
</g>
<g>
<title>stat64 (1 samples, 0.03%)</title><rect x="1088.9" y="883.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1091.9" y="894.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelRead (20 samples, 0.56%)</title><rect x="1089.2" y="995.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.2" y="1006.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.receive (20 samples, 0.56%)</title><rect x="1089.2" y="979.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.2" y="990.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection$Status$1.handle (16 samples, 0.45%)</title><rect x="1089.2" y="963.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.2" y="974.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.03%)</title><rect x="1089.2" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1092.2" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.03%)</title><rect x="1089.2" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.2" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans(JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="1089.2" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.2" y="926.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="1089.2" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.2" y="910.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1089.2" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1092.2" y="894.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1089.2" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.2" y="878.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1089.2" y="851.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1092.2" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1089.2" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1092.2" y="846.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1089.2" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1092.2" y="830.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.access$200 (15 samples, 0.42%)</title><rect x="1089.5" y="947.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.5" y="958.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.appendData (15 samples, 0.42%)</title><rect x="1089.5" y="931.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.5" y="942.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (15 samples, 0.42%)</title><rect x="1089.5" y="915.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.5" y="926.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onData (15 samples, 0.42%)</title><rect x="1089.5" y="899.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.5" y="910.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (15 samples, 0.42%)</title><rect x="1089.5" y="883.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.5" y="894.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (15 samples, 0.42%)</title><rect x="1089.5" y="867.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="878.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (15 samples, 0.42%)</title><rect x="1089.5" y="851.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.5" y="862.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (15 samples, 0.42%)</title><rect x="1089.5" y="835.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.5" y="846.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (15 samples, 0.42%)</title><rect x="1089.5" y="819.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.5" y="830.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (15 samples, 0.42%)</title><rect x="1089.5" y="803.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.5" y="814.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (15 samples, 0.42%)</title><rect x="1089.5" y="787.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.5" y="798.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (15 samples, 0.42%)</title><rect x="1089.5" y="771.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.5" y="782.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.access$500 (15 samples, 0.42%)</title><rect x="1089.5" y="755.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.5" y="766.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.deliver (15 samples, 0.42%)</title><rect x="1089.5" y="739.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.5" y="750.0"></text>
</g>
<g>
<title>io/termd/core/readline/EventQueue.hasNext (1 samples, 0.03%)</title><rect x="1089.5" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.5" y="734.0"></text>
</g>
<g>
<title>io/termd/core/readline/EventQueue.peek (1 samples, 0.03%)</title><rect x="1089.5" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.5" y="718.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="1089.5" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.5" y="702.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$200 (14 samples, 0.39%)</title><rect x="1089.9" y="723.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.9" y="734.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.handle (14 samples, 0.39%)</title><rect x="1089.9" y="707.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.9" y="718.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$2.apply (5 samples, 0.14%)</title><rect x="1089.9" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.9" y="702.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$000 (5 samples, 0.14%)</title><rect x="1089.9" y="675.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.9" y="686.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.end (5 samples, 0.14%)</title><rect x="1089.9" y="659.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.9" y="670.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (5 samples, 0.14%)</title><rect x="1089.9" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.9" y="654.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (5 samples, 0.14%)</title><rect x="1089.9" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.9" y="638.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (5 samples, 0.14%)</title><rect x="1089.9" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.9" y="622.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (5 samples, 0.14%)</title><rect x="1089.9" y="595.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="606.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.createJob (5 samples, 0.14%)</title><rect x="1089.9" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="590.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellImpl.createJob (2 samples, 0.06%)</title><rect x="1089.9" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.9" y="574.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/GlobalJobControllerImpl.createJob (2 samples, 0.06%)</title><rect x="1089.9" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.9" y="558.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createJob (2 samples, 0.06%)</title><rect x="1089.9" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="542.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createProcess (2 samples, 0.06%)</title><rect x="1089.9" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.9" y="526.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (2 samples, 0.06%)</title><rect x="1089.9" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.9" y="510.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (2 samples, 0.06%)</title><rect x="1089.9" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="494.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.name (2 samples, 0.06%)</title><rect x="1089.9" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.9" y="478.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.03%)</title><rect x="1089.9" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.9" y="462.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.03%)</title><rect x="1089.9" y="435.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1092.9" y="446.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.shouldOverridesName (1 samples, 0.03%)</title><rect x="1090.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethod (1 samples, 0.03%)</title><rect x="1090.2" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.2" y="446.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.2" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.2" y="430.0"></text>
</g>
<g>
<title>java/lang/ReflectiveOperationException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.2" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.2" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.2" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="1090.2" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="1090.2" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.2" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.03%)</title><rect x="1090.2" y="323.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1093.2" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.03%)</title><rect x="1090.2" y="307.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1093.2" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.03%)</title><rect x="1090.2" y="291.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1093.2" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1090.2" y="275.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1093.2" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.03%)</title><rect x="1090.2" y="259.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1093.2" y="270.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (3 samples, 0.08%)</title><rect x="1090.5" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.5" y="574.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (3 samples, 0.08%)</title><rect x="1090.5" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.5" y="558.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (3 samples, 0.08%)</title><rect x="1090.5" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.5" y="542.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (3 samples, 0.08%)</title><rect x="1090.5" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.5" y="526.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (3 samples, 0.08%)</title><rect x="1090.5" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.5" y="510.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.sendChunk (3 samples, 0.08%)</title><rect x="1090.5" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.5" y="494.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (3 samples, 0.08%)</title><rect x="1090.5" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.5" y="478.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (3 samples, 0.08%)</title><rect x="1090.5" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.5" y="462.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (2 samples, 0.06%)</title><rect x="1090.5" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.5" y="446.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (2 samples, 0.06%)</title><rect x="1090.5" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.5" y="430.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.write (2 samples, 0.06%)</title><rect x="1090.5" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.5" y="414.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (2 samples, 0.06%)</title><rect x="1090.5" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.5" y="398.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/Unpooled.buffer (1 samples, 0.03%)</title><rect x="1090.5" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.5" y="382.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.03%)</title><rect x="1090.5" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.5" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.03%)</title><rect x="1090.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.5" y="350.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/UnpooledByteBufAllocator.newHeapBuffer (1 samples, 0.03%)</title><rect x="1090.5" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.5" y="334.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.5" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.5" y="318.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/UnpooledUnsafeHeapByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.5" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.5" y="302.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/UnpooledHeapByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1090.5" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.5" y="286.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.allocateArray (1 samples, 0.03%)</title><rect x="1090.5" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.5" y="270.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1090.8" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.8" y="382.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1090.8" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.8" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="1090.8" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.8" y="350.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.03%)</title><rect x="1090.8" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.8" y="334.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="1090.8" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.8" y="318.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.handler (1 samples, 0.03%)</title><rect x="1090.8" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="302.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.03%)</title><rect x="1090.8" y="275.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.8" y="286.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="1090.8" y="259.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.8" y="270.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="1090.8" y="243.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.8" y="254.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.03%)</title><rect x="1090.8" y="227.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.8" y="238.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.03%)</title><rect x="1090.8" y="211.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1093.8" y="222.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.03%)</title><rect x="1090.8" y="195.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.8" y="206.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.03%)</title><rect x="1090.8" y="179.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.8" y="190.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="1090.8" y="163.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1093.8" y="174.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="1090.8" y="147.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1093.8" y="158.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.encode (1 samples, 0.03%)</title><rect x="1091.2" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.encoderFor (1 samples, 0.03%)</title><rect x="1091.2" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.03%)</title><rect x="1091.2" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$2.hasName (1 samples, 0.03%)</title><rect x="1091.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.2" y="398.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (9 samples, 0.25%)</title><rect x="1091.5" y="691.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.5" y="702.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (9 samples, 0.25%)</title><rect x="1091.5" y="675.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.5" y="686.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="1091.5" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.5" y="670.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1091.8" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.8" y="670.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer.update (2 samples, 0.06%)</title><rect x="1092.2" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.2" y="670.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer$Update.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1092.2" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.2" y="654.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer.getCursorPosition (1 samples, 0.03%)</title><rect x="1092.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.2" y="638.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer.getPosition (1 samples, 0.03%)</title><rect x="1092.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.2" y="622.0"></text>
</g>
<g>
<title>io/termd/core/readline/LineBuffer$Update.perform (1 samples, 0.03%)</title><rect x="1092.5" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.5" y="654.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (4 samples, 0.11%)</title><rect x="1092.8" y="659.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.8" y="670.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (4 samples, 0.11%)</title><rect x="1092.8" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.8" y="654.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.sendChunk (4 samples, 0.11%)</title><rect x="1092.8" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.8" y="638.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (4 samples, 0.11%)</title><rect x="1092.8" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.8" y="622.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (4 samples, 0.11%)</title><rect x="1092.8" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.8" y="606.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (4 samples, 0.11%)</title><rect x="1092.8" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.8" y="590.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (4 samples, 0.11%)</title><rect x="1092.8" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.8" y="574.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.write (4 samples, 0.11%)</title><rect x="1092.8" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.8" y="558.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (4 samples, 0.11%)</title><rect x="1092.8" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.8" y="542.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (4 samples, 0.11%)</title><rect x="1092.8" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.8" y="526.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (4 samples, 0.11%)</title><rect x="1092.8" y="499.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.8" y="510.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (4 samples, 0.11%)</title><rect x="1092.8" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.8" y="494.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (4 samples, 0.11%)</title><rect x="1092.8" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.8" y="478.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (4 samples, 0.11%)</title><rect x="1092.8" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.8" y="462.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.write (4 samples, 0.11%)</title><rect x="1092.8" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.8" y="446.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.write (4 samples, 0.11%)</title><rect x="1092.8" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.8" y="430.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.newClosedChannelException (2 samples, 0.06%)</title><rect x="1092.8" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.8" y="414.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/StacklessClosedChannelException.newInstance (2 samples, 0.06%)</title><rect x="1092.8" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.8" y="398.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/StacklessClosedChannelException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1092.8" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.8" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/ClosedChannelException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1092.8" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.8" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThrowableUtil.unknownStackTrace (1 samples, 0.03%)</title><rect x="1093.1" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1093.1" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.1" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel.filterOutboundMessage (1 samples, 0.03%)</title><rect x="1093.5" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.5" y="414.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioChannel.newDirectBuffer (1 samples, 0.03%)</title><rect x="1093.5" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.5" y="398.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.03%)</title><rect x="1093.5" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.5" y="382.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.03%)</title><rect x="1093.5" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.5" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.03%)</title><rect x="1093.5" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.5" y="350.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/PoolArena.allocate (1 samples, 0.03%)</title><rect x="1093.5" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.5" y="334.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.03%)</title><rect x="1093.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.5" y="318.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.03%)</title><rect x="1093.5" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.5" y="302.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/PooledByteBuf.reuse (1 samples, 0.03%)</title><rect x="1093.5" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.5" y="286.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (1 samples, 0.03%)</title><rect x="1093.5" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.5" y="270.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (1 samples, 0.03%)</title><rect x="1093.5" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.5" y="254.0"></text>
</g>
<g>
<title>InterpreterRuntime::at_safepoint(JavaThread*) (1 samples, 0.03%)</title><rect x="1093.5" y="227.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.5" y="238.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.03%)</title><rect x="1093.5" y="211.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1096.5" y="222.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans(JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="1093.5" y="195.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.5" y="206.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="1093.5" y="179.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.5" y="190.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1093.5" y="163.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1096.5" y="174.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1093.5" y="147.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.5" y="158.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1093.5" y="131.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1096.5" y="142.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1093.5" y="115.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.5" y="126.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1093.5" y="99.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1096.5" y="110.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/ReferenceCountUtil.release (1 samples, 0.03%)</title><rect x="1093.8" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.8" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="1093.8" y="387.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.8" y="398.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="1093.8" y="371.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1096.8" y="382.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="1093.8" y="355.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.8" y="366.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="1093.8" y="339.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.8" y="350.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::create_mdo(methodHandle, JavaThread*) (1 samples, 0.03%)</title><rect x="1093.8" y="323.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.8" y="334.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1093.8" y="307.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.8" y="318.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.03%)</title><rect x="1093.8" y="291.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.8" y="302.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1093.8" y="275.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1096.8" y="286.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1093.8" y="259.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1096.8" y="270.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1093.8" y="243.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.8" y="254.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1093.8" y="227.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1096.8" y="238.0"></text>
</g>
<g>
<title>io/termd/core/util/Helper.convert (1 samples, 0.03%)</title><rect x="1094.1" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.get (1 samples, 0.03%)</title><rect x="1094.1" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.1" y="654.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushDataIfNecessary (4 samples, 0.11%)</title><rect x="1094.5" y="963.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.5" y="974.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (4 samples, 0.11%)</title><rect x="1094.5" y="947.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.5" y="958.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onData (4 samples, 0.11%)</title><rect x="1094.5" y="931.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.5" y="942.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (4 samples, 0.11%)</title><rect x="1094.5" y="915.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="926.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (4 samples, 0.11%)</title><rect x="1094.5" y="899.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.5" y="910.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (4 samples, 0.11%)</title><rect x="1094.5" y="883.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.5" y="894.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (4 samples, 0.11%)</title><rect x="1094.5" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.5" y="878.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (4 samples, 0.11%)</title><rect x="1094.5" y="851.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="862.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (4 samples, 0.11%)</title><rect x="1094.5" y="835.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.5" y="846.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (4 samples, 0.11%)</title><rect x="1094.5" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="830.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (4 samples, 0.11%)</title><rect x="1094.5" y="803.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.5" y="814.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.access$500 (4 samples, 0.11%)</title><rect x="1094.5" y="787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="798.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.deliver (4 samples, 0.11%)</title><rect x="1094.5" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.5" y="782.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$200 (4 samples, 0.11%)</title><rect x="1094.5" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.5" y="766.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.handle (4 samples, 0.11%)</title><rect x="1094.5" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.5" y="750.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$2.apply (4 samples, 0.11%)</title><rect x="1094.5" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.5" y="734.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$000 (4 samples, 0.11%)</title><rect x="1094.5" y="707.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.5" y="718.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.end (4 samples, 0.11%)</title><rect x="1094.5" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.5" y="702.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (4 samples, 0.11%)</title><rect x="1094.5" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.5" y="686.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (4 samples, 0.11%)</title><rect x="1094.5" y="659.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.5" y="670.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (4 samples, 0.11%)</title><rect x="1094.5" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.5" y="654.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (4 samples, 0.11%)</title><rect x="1094.5" y="627.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="638.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.createJob (4 samples, 0.11%)</title><rect x="1094.5" y="611.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1097.5" y="622.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellImpl.createJob (3 samples, 0.08%)</title><rect x="1094.5" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.5" y="606.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/GlobalJobControllerImpl.createJob (3 samples, 0.08%)</title><rect x="1094.5" y="579.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.5" y="590.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createJob (3 samples, 0.08%)</title><rect x="1094.5" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.5" y="574.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createProcess (3 samples, 0.08%)</title><rect x="1094.5" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.5" y="558.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (3 samples, 0.08%)</title><rect x="1094.5" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.5" y="542.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (3 samples, 0.08%)</title><rect x="1094.5" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="526.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.name (3 samples, 0.08%)</title><rect x="1094.5" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.5" y="510.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.03%)</title><rect x="1094.5" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1097.5" y="494.0"></text>
</g>
<g>
<title>nmethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="1094.5" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1097.5" y="478.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="1094.5" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.5" y="462.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.shouldOverridesName (2 samples, 0.06%)</title><rect x="1094.8" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethod (2 samples, 0.06%)</title><rect x="1094.8" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.searchMethods (1 samples, 0.03%)</title><rect x="1094.8" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.8" y="462.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1095.1" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ReflectiveOperationException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1095.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1095.1" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1095.1" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="1095.1" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="1095.1" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.1" y="382.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.03%)</title><rect x="1095.1" y="355.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1098.1" y="366.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.03%)</title><rect x="1095.1" y="339.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1098.1" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.03%)</title><rect x="1095.1" y="323.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.1" y="334.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1095.1" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1098.1" y="318.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.03%)</title><rect x="1095.1" y="291.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.1" y="302.0"></text>
</g>
<g>
<title>void oop_store&lt;unsigned int&gt;(unsigned int*, oopDesc*) (1 samples, 0.03%)</title><rect x="1095.1" y="275.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1098.1" y="286.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (1 samples, 0.03%)</title><rect x="1095.4" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.4" y="606.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (1 samples, 0.03%)</title><rect x="1095.4" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.4" y="590.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/TermImpl.echo (1 samples, 0.03%)</title><rect x="1095.4" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.4" y="574.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.03%)</title><rect x="1095.4" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.4" y="558.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.03%)</title><rect x="1095.4" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.4" y="542.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.sendChunk (1 samples, 0.03%)</title><rect x="1095.4" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.4" y="526.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.03%)</title><rect x="1095.4" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.4" y="510.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.03%)</title><rect x="1095.4" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.4" y="494.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.03%)</title><rect x="1095.4" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.4" y="478.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.03%)</title><rect x="1095.4" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.4" y="462.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.write (1 samples, 0.03%)</title><rect x="1095.4" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.4" y="446.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (1 samples, 0.03%)</title><rect x="1095.4" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.4" y="430.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1095.4" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.4" y="414.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1095.4" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.4" y="398.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="1095.4" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.4" y="382.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.03%)</title><rect x="1095.4" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.4" y="366.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="1095.4" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.4" y="350.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.write (1 samples, 0.03%)</title><rect x="1095.4" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.4" y="334.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.write (1 samples, 0.03%)</title><rect x="1095.4" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.4" y="318.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/ReferenceCountUtil.release (1 samples, 0.03%)</title><rect x="1095.4" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.4" y="302.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.03%)</title><rect x="1095.4" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.4" y="286.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ReferenceCountUpdater.release (1 samples, 0.03%)</title><rect x="1095.4" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.4" y="270.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (2 samples, 0.06%)</title><rect x="1095.8" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.8" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.fireChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.8" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.8" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.8" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.8" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.8" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.8" y="1038.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.8" y="1022.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/logging/LoggingHandler.channelRead (1 samples, 0.03%)</title><rect x="1095.8" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.8" y="1006.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.8" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="1095.8" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (1 samples, 0.03%)</title><rect x="1095.8" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.8" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/MultithreadEventLoopGroup.register (1 samples, 0.03%)</title><rect x="1095.8" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.8" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/SingleThreadEventLoop.register (1 samples, 0.03%)</title><rect x="1095.8" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.8" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/SingleThreadEventLoop.register (1 samples, 0.03%)</title><rect x="1095.8" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.8" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.register (1 samples, 0.03%)</title><rect x="1095.8" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.8" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.03%)</title><rect x="1095.8" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.8" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.03%)</title><rect x="1095.8" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.8" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor.startThread (1 samples, 0.03%)</title><rect x="1095.8" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.8" y="830.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor.doStartThread (1 samples, 0.03%)</title><rect x="1095.8" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.8" y="814.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThreadExecutorMap$1.execute (1 samples, 0.03%)</title><rect x="1095.8" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.8" y="798.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/ThreadPerTaskExecutor.execute (1 samples, 0.03%)</title><rect x="1095.8" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.03%)</title><rect x="1095.8" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.03%)</title><rect x="1095.8" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.8" y="750.0"></text>
</g>
<g>
<title>JVM_StartThread (1 samples, 0.03%)</title><rect x="1095.8" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1098.8" y="734.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (1 samples, 0.03%)</title><rect x="1095.8" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.8" y="718.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1095.8" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.8" y="702.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1095.8" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1098.8" y="686.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1095.8" y="659.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1098.8" y="670.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1095.8" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.8" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1095.8" y="627.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1098.8" y="638.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (1 samples, 0.03%)</title><rect x="1096.1" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.1" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1096.1" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.1" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1096.1" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.1" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioChannel.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1096.1" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.1" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.select (1 samples, 0.03%)</title><rect x="1096.4" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.4" y="1182.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/SelectedSelectionKeySetSelector.select (1 samples, 0.03%)</title><rect x="1096.4" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.4" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.03%)</title><rect x="1096.4" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.03%)</title><rect x="1096.4" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.03%)</title><rect x="1096.4" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="1096.4" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (1 samples, 0.03%)</title><rect x="1096.4" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (1 samples, 0.03%)</title><rect x="1096.4" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.4" y="1070.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.03%)</title><rect x="1096.4" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1099.4" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (7 samples, 0.19%)</title><rect x="1096.8" y="1171.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.8" y="1182.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/AbstractEventExecutor.safeExecute (7 samples, 0.19%)</title><rect x="1096.8" y="1155.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.8" y="1166.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (1 samples, 0.03%)</title><rect x="1096.8" y="1139.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.8" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (1 samples, 0.03%)</title><rect x="1096.8" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.8" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (1 samples, 0.03%)</title><rect x="1096.8" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.8" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.safeSetSuccess (1 samples, 0.03%)</title><rect x="1096.8" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.8" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPromise.trySuccess (1 samples, 0.03%)</title><rect x="1096.8" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.8" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.trySuccess (1 samples, 0.03%)</title><rect x="1096.8" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.8" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.03%)</title><rect x="1096.8" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.8" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.03%)</title><rect x="1096.8" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.8" y="1038.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.checkNotifyWaiters (1 samples, 0.03%)</title><rect x="1096.8" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.8" y="1022.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.03%)</title><rect x="1096.8" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1099.8" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="1096.8" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1099.8" y="990.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1096.8" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1099.8" y="974.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.03%)</title><rect x="1096.8" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1099.8" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1096.8" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.8" y="942.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1096.8" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.8" y="926.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1096.8" y="899.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1099.8" y="910.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1096.8" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1099.8" y="894.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1096.8" y="867.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1099.8" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext$11.run (1 samples, 0.03%)</title><rect x="1097.1" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.1" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.access$1200 (1 samples, 0.03%)</title><rect x="1097.1" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.1" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeClose (1 samples, 0.03%)</title><rect x="1097.1" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.1" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.close (1 samples, 0.03%)</title><rect x="1097.1" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.1" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler.close (1 samples, 0.03%)</title><rect x="1097.1" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.1" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPromise.addListener (1 samples, 0.03%)</title><rect x="1097.1" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.1" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.addListener (1 samples, 0.03%)</title><rect x="1097.1" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.1" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.notifyListeners (1 samples, 0.03%)</title><rect x="1097.1" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.1" y="1038.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.notifyListenersNow (1 samples, 0.03%)</title><rect x="1097.1" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.1" y="1022.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.notifyListener0 (1 samples, 0.03%)</title><rect x="1097.1" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.1" y="1006.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler$1.operationComplete (1 samples, 0.03%)</title><rect x="1097.1" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.1" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler$1.operationComplete (1 samples, 0.03%)</title><rect x="1097.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.1" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.close (1 samples, 0.03%)</title><rect x="1097.1" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.1" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeClose (1 samples, 0.03%)</title><rect x="1097.1" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.1" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/CombinedChannelDuplexHandler.close (1 samples, 0.03%)</title><rect x="1097.1" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.1" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/ChannelOutboundHandlerAdapter.close (1 samples, 0.03%)</title><rect x="1097.1" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.1" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.close (1 samples, 0.03%)</title><rect x="1097.1" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.1" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.close (1 samples, 0.03%)</title><rect x="1097.1" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.1" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeClose (1 samples, 0.03%)</title><rect x="1097.1" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.1" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.close (1 samples, 0.03%)</title><rect x="1097.1" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.1" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.close (1 samples, 0.03%)</title><rect x="1097.1" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.1" y="830.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.close (1 samples, 0.03%)</title><rect x="1097.1" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.1" y="814.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.fireChannelInactiveAndDeregister (1 samples, 0.03%)</title><rect x="1097.1" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.1" y="798.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext$7.run (2 samples, 0.06%)</title><rect x="1097.4" y="1139.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.4" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.access$600 (2 samples, 0.06%)</title><rect x="1097.4" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.4" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.06%)</title><rect x="1097.4" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.4" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 0.06%)</title><rect x="1097.4" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.4" y="1102.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/HttpRequestHandler.channelRead0 (2 samples, 0.06%)</title><rect x="1097.4" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.4" y="1086.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/HttpRequestHandler.channelRead0 (2 samples, 0.06%)</title><rect x="1097.4" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.4" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1097.4" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1100.4" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1100.4" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle, int, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.4" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, KlassHandle&amp;, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.4" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1100.4" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="963.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1100.4" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1100.4" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.4" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.4" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.4" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.4" y="894.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle, StackMapFrame*, Thread*) (1 samples, 0.03%)</title><rect x="1097.4" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.4" y="878.0"></text>
</g>
<g>
<title>Symbol::as_C_string(char*, int) const (1 samples, 0.03%)</title><rect x="1097.4" y="851.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.4" y="862.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/DirectoryBrowser.directView (1 samples, 0.03%)</title><rect x="1097.7" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.7" y="1054.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/http/DirectoryBrowser.renderDir (1 samples, 0.03%)</title><rect x="1097.7" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.03%)</title><rect x="1097.7" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.03%)</title><rect x="1097.7" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.7" y="1006.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.03%)</title><rect x="1097.7" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.7" y="990.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.03%)</title><rect x="1097.7" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.7" y="974.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1097.7" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.7" y="958.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (1 samples, 0.03%)</title><rect x="1097.7" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.7" y="942.0"></text>
</g>
<g>
<title>java/util/Formatter$Conversion.isValid (1 samples, 0.03%)</title><rect x="1097.7" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.7" y="926.0"></text>
</g>
<g>
<title>java/util/Formatter$Conversion.isGeneral (1 samples, 0.03%)</title><rect x="1097.7" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.7" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext$WriteTask.run (1 samples, 0.03%)</title><rect x="1098.1" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.1" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.03%)</title><rect x="1098.1" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.1" y="1134.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.03%)</title><rect x="1098.1" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.1" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/ChannelDuplexHandler.flush (1 samples, 0.03%)</title><rect x="1098.1" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.1" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.flush (1 samples, 0.03%)</title><rect x="1098.1" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.1" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeFlush (1 samples, 0.03%)</title><rect x="1098.1" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.1" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.03%)</title><rect x="1098.1" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.1" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/stream/ChunkedWriteHandler.flush (1 samples, 0.03%)</title><rect x="1098.1" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="1038.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/stream/ChunkedWriteHandler.doFlush (1 samples, 0.03%)</title><rect x="1098.1" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.1" y="1022.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="1098.1" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.1" y="1006.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="1098.1" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.1" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="1098.1" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.1" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="1098.1" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.1" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/CombinedChannelDuplexHandler.write (1 samples, 0.03%)</title><rect x="1098.1" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.1" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/MessageToMessageEncoder.write (1 samples, 0.03%)</title><rect x="1098.1" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.1" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/handler/codec/MessageToMessageEncoder.writePromiseCombiner (1 samples, 0.03%)</title><rect x="1098.1" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1098.1" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.1" y="894.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1098.1" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.1" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.03%)</title><rect x="1098.1" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.1" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="1098.1" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1101.1" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1098.1" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.1" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.03%)</title><rect x="1098.1" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.03%)</title><rect x="1098.1" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.1" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.03%)</title><rect x="1098.1" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.1" y="782.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.03%)</title><rect x="1098.1" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.1" y="766.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.03%)</title><rect x="1098.1" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.1" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.03%)</title><rect x="1098.1" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.1" y="734.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytes (1 samples, 0.03%)</title><rect x="1098.1" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.1" y="718.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytes (1 samples, 0.03%)</title><rect x="1098.1" y="691.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1101.1" y="702.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.03%)</title><rect x="1098.1" y="675.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1101.1" y="686.0"></text>
</g>
<g>
<title>zError (1 samples, 0.03%)</title><rect x="1098.1" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1101.1" y="670.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/ScheduledFutureTask.run (2 samples, 0.06%)</title><rect x="1098.4" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.4" y="1150.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/PromiseTask.runTask (2 samples, 0.06%)</title><rect x="1098.4" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.4" y="1134.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/term/impl/httptelnet/ProtocolDetectHandler$1.run (2 samples, 0.06%)</title><rect x="1098.4" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.4" y="1118.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.03%)</title><rect x="1098.4" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.4" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.03%)</title><rect x="1098.4" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.4" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.03%)</title><rect x="1098.4" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.4" y="1070.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelActive (1 samples, 0.03%)</title><rect x="1098.4" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.4" y="1054.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.onInit (1 samples, 0.03%)</title><rect x="1098.4" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.4" y="1038.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onOpen (1 samples, 0.03%)</title><rect x="1098.4" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.4" y="1022.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.writeWillOption (1 samples, 0.03%)</title><rect x="1098.4" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.4" y="1006.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (1 samples, 0.03%)</title><rect x="1098.4" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.4" y="990.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1098.4" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.4" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.03%)</title><rect x="1098.4" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.4" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="1098.4" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.4" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.03%)</title><rect x="1098.4" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.4" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.03%)</title><rect x="1098.4" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.4" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.03%)</title><rect x="1098.4" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.4" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.03%)</title><rect x="1098.4" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.4" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.03%)</title><rect x="1098.4" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.4" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.03%)</title><rect x="1098.4" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.4" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/socket/nio/NioSocketChannel.doWrite (1 samples, 0.03%)</title><rect x="1098.4" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="1098.4" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="1098.4" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.03%)</title><rect x="1098.4" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.03%)</title><rect x="1098.4" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.03%)</title><rect x="1098.4" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.4" y="750.0"></text>
</g>
<g>
<title>write (1 samples, 0.03%)</title><rect x="1098.4" y="723.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1101.4" y="734.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/group/DefaultChannelGroup.add (1 samples, 0.03%)</title><rect x="1098.7" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.7" y="1102.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/group/DefaultChannelGroup.add (1 samples, 0.03%)</title><rect x="1098.7" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.7" y="1086.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPromise.addListener (1 samples, 0.03%)</title><rect x="1098.7" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.7" y="1070.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPromise.addListener (1 samples, 0.03%)</title><rect x="1098.7" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.7" y="1054.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/DefaultPromise.addListener (1 samples, 0.03%)</title><rect x="1098.7" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.08%)</title><rect x="1099.1" y="1235.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.08%)</title><rect x="1099.1" y="1219.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (2 samples, 0.06%)</title><rect x="1099.1" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (1 samples, 0.03%)</title><rect x="1099.1" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.03%)</title><rect x="1099.1" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.03%)</title><rect x="1099.1" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.1" y="1166.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (1 samples, 0.03%)</title><rect x="1099.1" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.1" y="1150.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.03%)</title><rect x="1099.1" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.1" y="1134.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.03%)</title><rect x="1099.1" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.1" y="1118.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (1 samples, 0.03%)</title><rect x="1099.1" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.1" y="1102.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (1 samples, 0.03%)</title><rect x="1099.1" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.1" y="1086.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (1 samples, 0.03%)</title><rect x="1099.1" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.1" y="1070.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.03%)</title><rect x="1099.1" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.1" y="1054.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.03%)</title><rect x="1099.1" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.1" y="1038.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.03%)</title><rect x="1099.1" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1099.1" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.1" y="1006.0"></text>
</g>
<g>
<title>com/taobao/arthas/agent/ArthasClassloader.loadClass (1 samples, 0.03%)</title><rect x="1099.1" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.1" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1099.1" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.1" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1099.1" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.1" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.03%)</title><rect x="1099.1" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.1" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.03%)</title><rect x="1099.1" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.1" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.03%)</title><rect x="1099.1" y="899.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1102.1" y="910.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.03%)</title><rect x="1099.1" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1102.1" y="894.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.03%)</title><rect x="1099.1" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.1" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.03%)</title><rect x="1099.1" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1102.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301 (1 samples, 0.03%)</title><rect x="1099.4" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (1 samples, 0.03%)</title><rect x="1099.4" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.03%)</title><rect x="1099.4" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.4" y="1166.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellServerImpl$2.run (1 samples, 0.03%)</title><rect x="1099.4" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.4" y="1150.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellServerImpl.access$000 (1 samples, 0.03%)</title><rect x="1099.4" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.4" y="1134.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellServerImpl.evictSessions (1 samples, 0.03%)</title><rect x="1099.4" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.next (1 samples, 0.03%)</title><rect x="1099.4" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.4" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1099.4" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1102.4" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="1099.4" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1102.4" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="1099.4" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.4" y="1054.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1099.4" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.03%)</title><rect x="1099.7" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.03%)</title><rect x="1099.7" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.03%)</title><rect x="1099.7" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.03%)</title><rect x="1099.7" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.03%)</title><rect x="1099.7" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.7" y="1150.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1099.7" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.7" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="1099.7" y="1107.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1102.7" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="1099.7" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1102.7" y="1102.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1099.7" y="1075.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1102.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (1 samples, 0.03%)</title><rect x="1100.0" y="1251.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.access$100 (1 samples, 0.03%)</title><rect x="1100.0" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (1 samples, 0.03%)</title><rect x="1100.0" y="1219.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1103.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (1 samples, 0.03%)</title><rect x="1100.0" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.0" y="1214.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.finalize (1 samples, 0.03%)</title><rect x="1100.0" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.0" y="1198.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.close (1 samples, 0.03%)</title><rect x="1100.0" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.0" y="1182.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.03%)</title><rect x="1100.0" y="1155.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.0" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="1100.0" y="1139.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.0" y="1150.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="1100.0" y="1123.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.0" y="1134.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.03%)</title><rect x="1100.0" y="1107.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.0" y="1118.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1100.0" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.0" y="1102.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1100.0" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.0" y="1086.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1100.0" y="1059.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1103.0" y="1070.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1100.0" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.0" y="1054.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1100.0" y="1027.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1103.0" y="1038.0"></text>
</g>
<g>
<title>thread_start (273 samples, 7.60%)</title><rect x="1100.4" y="1251.0" width="89.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1103.4" y="1262.0">thread_start</text>
</g>
<g>
<title>_pthread_start (273 samples, 7.60%)</title><rect x="1100.4" y="1235.0" width="89.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1103.4" y="1246.0">_pthread_s..</text>
</g>
<g>
<title>_pthread_body (273 samples, 7.60%)</title><rect x="1100.4" y="1219.0" width="89.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1103.4" y="1230.0">_pthread_b..</text>
</g>
<g>
<title>java_start(Thread*) (273 samples, 7.60%)</title><rect x="1100.4" y="1203.0" width="89.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1103.4" y="1214.0">java_start..</text>
</g>
<g>
<title>GCTaskThread::run() (107 samples, 2.98%)</title><rect x="1100.4" y="1187.0" width="35.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.4" y="1198.0">GCT..</text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (17 samples, 0.47%)</title><rect x="1100.4" y="1171.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.4" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1100.4" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.4" y="1166.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1100.4" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1103.4" y="1150.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.03%)</title><rect x="1100.4" y="1123.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.4" y="1134.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (14 samples, 0.39%)</title><rect x="1100.7" y="1155.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.7" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (14 samples, 0.39%)</title><rect x="1100.7" y="1139.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.7" y="1150.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (13 samples, 0.36%)</title><rect x="1100.7" y="1123.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1103.7" y="1134.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (13 samples, 0.36%)</title><rect x="1100.7" y="1107.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.7" y="1118.0"></text>
</g>
<g>
<title>__psynch_cvwait (13 samples, 0.36%)</title><rect x="1100.7" y="1091.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1103.7" y="1102.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="1105.0" y="1123.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.0" y="1134.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.03%)</title><rect x="1105.0" y="1107.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1108.0" y="1118.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (2 samples, 0.06%)</title><rect x="1105.3" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1108.3" y="1166.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.06%)</title><rect x="1105.3" y="1139.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1108.3" y="1150.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (10 samples, 0.28%)</title><rect x="1105.9" y="1171.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.9" y="1182.0"></text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (10 samples, 0.28%)</title><rect x="1105.9" y="1155.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.9" y="1166.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (5 samples, 0.14%)</title><rect x="1106.3" y="1139.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.3" y="1150.0"></text>
</g>
<g>
<title>ObjectStartArray::offset_addr_for_block(signed char*) const (1 samples, 0.03%)</title><rect x="1106.6" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1109.6" y="1134.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.08%)</title><rect x="1106.9" y="1123.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.9" y="1134.0"></text>
</g>
<g>
<title>ObjectStartArray::object_starts_in_range(HeapWord*, HeapWord*) const (3 samples, 0.08%)</title><rect x="1107.9" y="1139.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1110.9" y="1150.0"></text>
</g>
<g>
<title>ObjectStartArray::offset_addr_for_block(signed char*) const (1 samples, 0.03%)</title><rect x="1108.9" y="1139.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.9" y="1150.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (6 samples, 0.17%)</title><rect x="1109.2" y="1171.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.2" y="1182.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (5 samples, 0.14%)</title><rect x="1109.2" y="1155.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.2" y="1166.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (5 samples, 0.14%)</title><rect x="1109.2" y="1139.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.2" y="1150.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (5 samples, 0.14%)</title><rect x="1109.2" y="1123.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1112.2" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1110.9" y="1155.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1113.9" y="1166.0"></text>
</g>
<g>
<title>ProtectionDomainCacheTable::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1110.9" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1113.9" y="1150.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (69 samples, 1.92%)</title><rect x="1111.2" y="1171.0" width="22.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.2" y="1182.0">S..</text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (13 samples, 0.36%)</title><rect x="1111.2" y="1155.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1114.2" y="1166.0"></text>
</g>
<g>
<title>xdrrec_ops (10 samples, 0.28%)</title><rect x="1112.2" y="1139.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1115.2" y="1150.0"></text>
</g>
<g>
<title>SpinPause (56 samples, 1.56%)</title><rect x="1115.5" y="1155.0" width="18.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1118.5" y="1166.0"></text>
</g>
<g>
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (3 samples, 0.08%)</title><rect x="1133.9" y="1171.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.9" y="1182.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (3 samples, 0.08%)</title><rect x="1133.9" y="1155.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.9" y="1166.0"></text>
</g>
<g>
<title>Thread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1133.9" y="1139.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.9" y="1150.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1133.9" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.9" y="1134.0"></text>
</g>
<g>
<title>frame::oops_entry_do(OopClosure*, RegisterMap const*) (1 samples, 0.03%)</title><rect x="1134.2" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.2" y="1150.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1134.2" y="1123.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="1134.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="1134.5" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.5" y="1150.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="1134.5" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.5" y="1134.0"></text>
</g>
<g>
<title>VMThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1134.8" y="1171.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.8" y="1182.0"></text>
</g>
<g>
<title>WaitForBarrierGCTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.03%)</title><rect x="1135.2" y="1171.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.2" y="1182.0"></text>
</g>
<g>
<title>BarrierGCTask::do_it_internal(GCTaskManager*, unsigned int) (1 samples, 0.03%)</title><rect x="1135.2" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.2" y="1166.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1135.2" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.2" y="1150.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1135.2" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.2" y="1134.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1135.2" y="1107.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1138.2" y="1118.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1135.2" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.2" y="1102.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1135.2" y="1075.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1138.2" y="1086.0"></text>
</g>
<g>
<title>JavaThread::run() (94 samples, 2.62%)</title><rect x="1135.5" y="1187.0" width="30.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.5" y="1198.0">Ja..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (94 samples, 2.62%)</title><rect x="1135.5" y="1171.0" width="30.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.5" y="1182.0">Ja..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (81 samples, 2.25%)</title><rect x="1135.5" y="1155.0" width="26.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.5" y="1166.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (65 samples, 1.81%)</title><rect x="1135.5" y="1139.0" width="21.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.5" y="1150.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (45 samples, 1.25%)</title><rect x="1135.5" y="1123.0" width="14.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.5" y="1134.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (45 samples, 1.25%)</title><rect x="1135.5" y="1107.0" width="14.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.5" y="1118.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (26 samples, 0.72%)</title><rect x="1135.5" y="1091.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.5" y="1102.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.06%)</title><rect x="1135.5" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.5" y="1086.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.03%)</title><rect x="1135.5" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.5" y="1070.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1135.5" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.5" y="1054.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="1135.5" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.5" y="1038.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (1 samples, 0.03%)</title><rect x="1135.5" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.5" y="1022.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_safepoint(JVMState*, int) (1 samples, 0.03%)</title><rect x="1135.8" y="1059.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.8" y="1070.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.03%)</title><rect x="1135.8" y="1043.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.8" y="1054.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1135.8" y="1027.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.8" y="1038.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.03%)</title><rect x="1136.2" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.2" y="1086.0"></text>
</g>
<g>
<title>MemBarReleaseLockNode::Opcode() const (1 samples, 0.03%)</title><rect x="1136.2" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.2" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.03%)</title><rect x="1136.5" y="1075.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.5" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.03%)</title><rect x="1136.5" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.5" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="1136.8" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.8" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="1136.8" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.8" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1136.8" y="1043.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.8" y="1054.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.03%)</title><rect x="1136.8" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.8" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (21 samples, 0.58%)</title><rect x="1137.1" y="1075.0" width="6.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.1" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.03%)</title><rect x="1137.1" y="1059.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.1" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.03%)</title><rect x="1137.5" y="1059.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.5" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.03%)</title><rect x="1137.5" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.5" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.03%)</title><rect x="1137.8" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.8" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.03%)</title><rect x="1137.8" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.8" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.03%)</title><rect x="1137.8" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.8" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.06%)</title><rect x="1138.1" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.1" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.03%)</title><rect x="1138.8" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.11%)</title><rect x="1139.1" y="1059.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.1" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.08%)</title><rect x="1139.4" y="1043.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.4" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.06%)</title><rect x="1139.4" y="1027.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.4" y="1038.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (1 samples, 0.03%)</title><rect x="1140.1" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.1" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.17%)</title><rect x="1140.4" y="1059.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1143.4" y="1070.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.11%)</title><rect x="1141.1" y="1043.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.1" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.03%)</title><rect x="1142.4" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.4" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.03%)</title><rect x="1142.7" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.03%)</title><rect x="1143.0" y="1059.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.0" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.06%)</title><rect x="1143.4" y="1059.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.4" y="1070.0"></text>
</g>
<g>
<title>IndexSet::remove(unsigned int) (1 samples, 0.03%)</title><rect x="1143.7" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.7" y="1054.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.31%)</title><rect x="1144.0" y="1091.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1147.0" y="1102.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.03%)</title><rect x="1144.0" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (7 samples, 0.19%)</title><rect x="1144.4" y="1075.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.4" y="1086.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.03%)</title><rect x="1144.4" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1144.7" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1145.0" y="1059.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="1145.0" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.03%)</title><rect x="1145.0" y="1027.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.0" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1145.0" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.0" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1145.0" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.08%)</title><rect x="1145.3" y="1059.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.06%)</title><rect x="1145.3" y="1043.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.06%)</title><rect x="1145.3" y="1027.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.06%)</title><rect x="1145.3" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.3" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (2 samples, 0.06%)</title><rect x="1145.3" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.3" y="1006.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.03%)</title><rect x="1146.0" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1146.3" y="1059.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1146.3" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.3" y="1054.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1146.3" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.08%)</title><rect x="1146.7" y="1075.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.7" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.08%)</title><rect x="1146.7" y="1059.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.7" y="1070.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1147.0" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.0" y="1054.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1147.0" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.0" y="1038.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1147.3" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.3" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.19%)</title><rect x="1147.6" y="1091.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.19%)</title><rect x="1147.6" y="1075.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.19%)</title><rect x="1147.6" y="1059.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.19%)</title><rect x="1147.6" y="1043.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.17%)</title><rect x="1147.6" y="1027.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.14%)</title><rect x="1147.6" y="1011.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.6" y="1022.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1147.6" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.6" y="1006.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="1147.6" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="990.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.03%)</title><rect x="1147.6" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="974.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1147.6" y="947.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="958.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1147.6" y="931.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.6" y="942.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1147.6" y="915.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.6" y="926.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1147.6" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.6" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.0" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.0" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.0" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1148.0" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.0" y="974.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1148.0" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.0" y="958.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1148.0" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.0" y="942.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1148.0" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.0" y="926.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1148.0" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.0" y="910.0"></text>
</g>
<g>
<title>TypeOopPtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1148.0" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.0" y="894.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1148.0" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.0" y="878.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1148.0" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.0" y="862.0"></text>
</g>
<g>
<title>TypeAry::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1148.0" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.0" y="846.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1148.0" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.0" y="830.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1148.0" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.0" y="814.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1148.0" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.0" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1148.3" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.3" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.3" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="851.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.3" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.3" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.3" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.3" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="563.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.3" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="451.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="435.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="419.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.3" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="387.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.3" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="355.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="339.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="323.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="307.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.3" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="291.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.3" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="275.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="259.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="243.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.3" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="227.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.3" y="211.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.3" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.3" y="195.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.3" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.3" y="179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.3" y="163.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.3" y="147.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.3" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.3" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.3" y="142.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.03%)</title><rect x="1148.3" y="115.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.3" y="126.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.03%)</title><rect x="1148.3" y="99.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="110.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1148.3" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.3" y="94.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1148.3" y="67.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="78.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.03%)</title><rect x="1148.3" y="51.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.3" y="62.0"></text>
</g>
<g>
<title>JVMState::debug_depth() const (1 samples, 0.03%)</title><rect x="1148.3" y="35.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.3" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.6" y="979.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.6" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.6" y="963.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.6" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1148.6" y="947.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1148.6" y="931.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1148.6" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1148.6" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1148.6" y="883.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.6" y="894.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1148.6" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.6" y="878.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.03%)</title><rect x="1148.6" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.6" y="862.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1148.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.6" y="846.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1148.6" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.6" y="830.0"></text>
</g>
<g>
<title>CatchProjNode::cmp(Node const&amp;) const (1 samples, 0.03%)</title><rect x="1148.6" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.6" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.03%)</title><rect x="1149.0" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1149.0" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.0" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1149.0" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.0" y="974.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.03%)</title><rect x="1149.0" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.0" y="958.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol*) (1 samples, 0.03%)</title><rect x="1149.0" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1149.3" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1149.3" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.3" y="1006.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1149.3" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.3" y="990.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1149.3" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.3" y="974.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1149.3" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.3" y="958.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1149.3" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.3" y="942.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1149.3" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.3" y="926.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.03%)</title><rect x="1149.6" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.6" y="1038.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.03%)</title><rect x="1149.9" y="1091.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="1102.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle) (1 samples, 0.03%)</title><rect x="1149.9" y="1075.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.9" y="1086.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1149.9" y="1059.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.9" y="1070.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="1149.9" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.9" y="1054.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="1149.9" y="1027.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1152.9" y="1038.0"></text>
</g>
<g>
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (1 samples, 0.03%)</title><rect x="1150.3" y="1123.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.3" y="1134.0"></text>
</g>
<g>
<title>StringEventLog::log(Thread*, char const*, ...) (1 samples, 0.03%)</title><rect x="1150.3" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.3" y="1118.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (1 samples, 0.03%)</title><rect x="1150.3" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.3" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.03%)</title><rect x="1150.6" y="1123.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.6" y="1134.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (15 samples, 0.42%)</title><rect x="1150.9" y="1123.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.9" y="1134.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (15 samples, 0.42%)</title><rect x="1150.9" y="1107.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.9" y="1118.0"></text>
</g>
<g>
<title>Compilation::compile_method() (15 samples, 0.42%)</title><rect x="1150.9" y="1091.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.9" y="1102.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (15 samples, 0.42%)</title><rect x="1150.9" y="1075.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.9" y="1086.0"></text>
</g>
<g>
<title>Compilation::build_hir() (3 samples, 0.08%)</title><rect x="1150.9" y="1059.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.9" y="1070.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.03%)</title><rect x="1150.9" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.9" y="1054.0"></text>
</g>
<g>
<title>GlobalValueNumbering::substitute(Instruction*) (1 samples, 0.03%)</title><rect x="1150.9" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="1038.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.03%)</title><rect x="1150.9" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.9" y="1022.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.06%)</title><rect x="1151.3" y="1043.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="1054.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.06%)</title><rect x="1151.3" y="1027.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.06%)</title><rect x="1151.3" y="1011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.06%)</title><rect x="1151.3" y="995.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.3" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.06%)</title><rect x="1151.3" y="979.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.3" y="990.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.03%)</title><rect x="1151.3" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.3" y="974.0"></text>
</g>
<g>
<title>ValueStack::copy(ValueStack::Kind, int) (1 samples, 0.03%)</title><rect x="1151.3" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.3" y="958.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.03%)</title><rect x="1151.3" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.3" y="942.0"></text>
</g>
<g>
<title>Values::push_all(Values const*) (1 samples, 0.03%)</title><rect x="1151.3" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.3" y="926.0"></text>
</g>
<g>
<title>Values::push(Instruction*) (1 samples, 0.03%)</title><rect x="1151.3" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.3" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1151.6" y="963.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.6" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1151.6" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1151.6" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.6" y="942.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (6 samples, 0.17%)</title><rect x="1151.9" y="1059.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.9" y="1070.0"></text>
</g>
<g>
<title>Compilation::emit_code_epilog(LIR_Assembler*) (3 samples, 0.08%)</title><rect x="1151.9" y="1043.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.9" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_stubs(CodeStubList*) (3 samples, 0.08%)</title><rect x="1151.9" y="1027.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.9" y="1038.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (2 samples, 0.06%)</title><rect x="1151.9" y="1011.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.9" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.06%)</title><rect x="1151.9" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.9" y="1006.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.06%)</title><rect x="1151.9" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.9" y="990.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (2 samples, 0.06%)</title><rect x="1151.9" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.9" y="974.0"></text>
</g>
<g>
<title>OopMapStream::OopMapStream(OopMap*) (2 samples, 0.06%)</title><rect x="1151.9" y="947.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.9" y="958.0"></text>
</g>
<g>
<title>SimpleExceptionStub::emit_code(LIR_Assembler*) (1 samples, 0.03%)</title><rect x="1152.6" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.6" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.03%)</title><rect x="1152.6" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.6" y="1006.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.03%)</title><rect x="1152.6" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.6" y="990.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.03%)</title><rect x="1152.6" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.6" y="974.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.03%)</title><rect x="1152.6" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.6" y="958.0"></text>
</g>
<g>
<title>DebugInformationRecorder::serialize_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.03%)</title><rect x="1152.6" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.6" y="942.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="1152.6" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.6" y="926.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (1 samples, 0.03%)</title><rect x="1152.6" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.6" y="910.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (3 samples, 0.08%)</title><rect x="1152.9" y="1043.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.9" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (3 samples, 0.08%)</title><rect x="1152.9" y="1027.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.9" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.03%)</title><rect x="1152.9" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.9" y="1022.0"></text>
</g>
<g>
<title>ciMethod::is_compiled_lambda_form() const (1 samples, 0.03%)</title><rect x="1152.9" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.9" y="1006.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.03%)</title><rect x="1153.2" y="1011.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.2" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (1 samples, 0.03%)</title><rect x="1153.2" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.2" y="1006.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.03%)</title><rect x="1153.6" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.6" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.03%)</title><rect x="1153.6" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.6" y="1006.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1153.6" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.6" y="990.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="1153.6" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.6" y="974.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (1 samples, 0.03%)</title><rect x="1153.6" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.6" y="958.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.08%)</title><rect x="1153.9" y="1059.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.9" y="1070.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.03%)</title><rect x="1153.9" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.9" y="1054.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (1 samples, 0.03%)</title><rect x="1153.9" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.9" y="1038.0"></text>
</g>
<g>
<title>LIRGenerator::do_root(Instruction*) (1 samples, 0.03%)</title><rect x="1153.9" y="1011.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.9" y="1022.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (1 samples, 0.03%)</title><rect x="1153.9" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="1006.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool) (1 samples, 0.03%)</title><rect x="1153.9" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="990.0"></text>
</g>
<g>
<title>LIR_OpList::push(LIR_Op*) (1 samples, 0.03%)</title><rect x="1153.9" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.9" y="974.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="1153.9" y="947.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1156.9" y="958.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.06%)</title><rect x="1154.2" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="1054.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.03%)</title><rect x="1154.2" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="1038.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.03%)</title><rect x="1154.2" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.2" y="1022.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.03%)</title><rect x="1154.2" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.2" y="1006.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.03%)</title><rect x="1154.2" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.2" y="990.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.03%)</title><rect x="1154.2" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.2" y="974.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) (1 samples, 0.03%)</title><rect x="1154.2" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.2" y="958.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (1 samples, 0.03%)</title><rect x="1154.5" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.5" y="1038.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (3 samples, 0.08%)</title><rect x="1154.9" y="1059.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.9" y="1070.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle) (3 samples, 0.08%)</title><rect x="1154.9" y="1043.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.9" y="1054.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle, Thread*) (2 samples, 0.06%)</title><rect x="1154.9" y="1027.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.9" y="1038.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle, Thread*) (2 samples, 0.06%)</title><rect x="1154.9" y="1011.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.9" y="1022.0"></text>
</g>
<g>
<title>MethodData::MethodData(methodHandle, int, Thread*) (1 samples, 0.03%)</title><rect x="1154.9" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.9" y="1006.0"></text>
</g>
<g>
<title>MethodData::initialize_data(BytecodeStream*, int) (1 samples, 0.03%)</title><rect x="1154.9" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="990.0"></text>
</g>
<g>
<title>MethodData::compute_allocation_size_in_words(methodHandle) (1 samples, 0.03%)</title><rect x="1155.2" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.2" y="1006.0"></text>
</g>
<g>
<title>MethodData::compute_allocation_size_in_bytes(methodHandle) (1 samples, 0.03%)</title><rect x="1155.2" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.2" y="990.0"></text>
</g>
<g>
<title>BytecodeStream::next() (1 samples, 0.03%)</title><rect x="1155.2" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.2" y="974.0"></text>
</g>
<g>
<title>BaseBytecodeStream::bcp() const (1 samples, 0.03%)</title><rect x="1155.2" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.2" y="958.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1155.5" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.5" y="1038.0"></text>
</g>
<g>
<title>MethodData::is_mature() const (1 samples, 0.03%)</title><rect x="1155.5" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.5" y="1022.0"></text>
</g>
<g>
<title>StringEventLog::log(Thread*, char const*, ...) (1 samples, 0.03%)</title><rect x="1155.9" y="1123.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.9" y="1134.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (1 samples, 0.03%)</title><rect x="1155.9" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.9" y="1118.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.03%)</title><rect x="1155.9" y="1091.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1158.9" y="1102.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.03%)</title><rect x="1155.9" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.9" y="1086.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.03%)</title><rect x="1155.9" y="1059.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1158.9" y="1070.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.03%)</title><rect x="1155.9" y="1043.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1158.9" y="1054.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.03%)</title><rect x="1155.9" y="1027.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1158.9" y="1038.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.03%)</title><rect x="1155.9" y="1011.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1158.9" y="1022.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (2 samples, 0.06%)</title><rect x="1156.2" y="1123.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.2" y="1134.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.03%)</title><rect x="1156.2" y="1107.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.2" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.03%)</title><rect x="1156.5" y="1107.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.5" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::find_non_perm(oopDesc*) (1 samples, 0.03%)</title><rect x="1156.5" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.5" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1156.5" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1156.5" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.5" y="1070.0"></text>
</g>
<g>
<title>java_lang_Class::protection_domain(oopDesc*) (1 samples, 0.03%)</title><rect x="1156.5" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.5" y="1054.0"></text>
</g>
<g>
<title>CompileQueue::get() (16 samples, 0.45%)</title><rect x="1156.8" y="1139.0" width="5.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.8" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.03%)</title><rect x="1156.8" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.8" y="1134.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1156.8" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.8" y="1118.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1156.8" y="1091.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1159.8" y="1102.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1156.8" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.8" y="1086.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1156.8" y="1059.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1159.8" y="1070.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (14 samples, 0.39%)</title><rect x="1157.2" y="1123.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.2" y="1134.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (14 samples, 0.39%)</title><rect x="1157.2" y="1107.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.2" y="1118.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.06%)</title><rect x="1157.2" y="1091.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1160.2" y="1102.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.06%)</title><rect x="1157.2" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.2" y="1086.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.06%)</title><rect x="1157.2" y="1059.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1160.2" y="1070.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (10 samples, 0.28%)</title><rect x="1157.8" y="1091.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.8" y="1102.0"></text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 0.28%)</title><rect x="1157.8" y="1075.0" width="3.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1160.8" y="1086.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (2 samples, 0.06%)</title><rect x="1161.1" y="1091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.1" y="1102.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.06%)</title><rect x="1161.1" y="1075.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1164.1" y="1086.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.03%)</title><rect x="1161.8" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.8" y="1134.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.03%)</title><rect x="1161.8" y="1107.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="1118.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (1 samples, 0.03%)</title><rect x="1161.8" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.8" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.03%)</title><rect x="1161.8" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.8" y="1086.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (13 samples, 0.36%)</title><rect x="1162.1" y="1155.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.1" y="1166.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (2 samples, 0.06%)</title><rect x="1162.1" y="1139.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.1" y="1150.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.06%)</title><rect x="1162.1" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.1" y="1134.0"></text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (1 samples, 0.03%)</title><rect x="1162.1" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.1" y="1118.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.03%)</title><rect x="1162.1" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.1" y="1102.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.03%)</title><rect x="1162.4" y="1107.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1165.4" y="1118.0"></text>
</g>
<g>
<title>nmethod::scope_desc_at(unsigned char*) (1 samples, 0.03%)</title><rect x="1162.4" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.4" y="1102.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc_internal(unsigned char*, bool) (1 samples, 0.03%)</title><rect x="1162.4" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.4" y="1086.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (11 samples, 0.31%)</title><rect x="1162.7" y="1139.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.7" y="1150.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (11 samples, 0.31%)</title><rect x="1162.7" y="1123.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="1134.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (11 samples, 0.31%)</title><rect x="1162.7" y="1107.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1165.7" y="1118.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (11 samples, 0.31%)</title><rect x="1162.7" y="1091.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.7" y="1102.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 0.31%)</title><rect x="1162.7" y="1075.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1165.7" y="1086.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1166.4" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.4" y="1198.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1166.4" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.4" y="1182.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.03%)</title><rect x="1166.4" y="1155.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1169.4" y="1166.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="1166.4" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.4" y="1150.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.03%)</title><rect x="1166.4" y="1123.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1169.4" y="1134.0"></text>
</g>
<g>
<title>VMThread::run() (50 samples, 1.39%)</title><rect x="1166.7" y="1187.0" width="16.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.7" y="1198.0"></text>
</g>
<g>
<title>VMThread::loop() (50 samples, 1.39%)</title><rect x="1166.7" y="1171.0" width="16.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.7" y="1182.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.14%)</title><rect x="1166.7" y="1155.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.7" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.14%)</title><rect x="1166.7" y="1139.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.7" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 0.14%)</title><rect x="1166.7" y="1123.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.7" y="1134.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.11%)</title><rect x="1167.0" y="1107.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1170.0" y="1118.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 0.14%)</title><rect x="1168.3" y="1155.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.3" y="1166.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.03%)</title><rect x="1168.7" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.7" y="1150.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1168.7" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.7" y="1134.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1168.7" y="1107.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.7" y="1118.0"></text>
</g>
<g>
<title>StackFrameStream::next() (1 samples, 0.03%)</title><rect x="1168.7" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.7" y="1102.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1168.7" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.7" y="1086.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1168.7" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.7" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="1168.7" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.7" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="1168.7" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.7" y="1038.0"></text>
</g>
<g>
<title>os::NakedYield() (3 samples, 0.08%)</title><rect x="1169.0" y="1139.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.0" y="1150.0"></text>
</g>
<g>
<title>xdrrec_ops (3 samples, 0.08%)</title><rect x="1169.0" y="1123.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1172.0" y="1134.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1170.0" y="1155.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1173.0" y="1166.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (39 samples, 1.09%)</title><rect x="1170.3" y="1155.0" width="12.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="1166.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (39 samples, 1.09%)</title><rect x="1170.3" y="1139.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="1150.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (39 samples, 1.09%)</title><rect x="1170.3" y="1123.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="1134.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (39 samples, 1.09%)</title><rect x="1170.3" y="1107.0" width="12.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.3" y="1118.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (39 samples, 1.09%)</title><rect x="1170.3" y="1091.0" width="12.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.3" y="1102.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (37 samples, 1.03%)</title><rect x="1170.3" y="1075.0" width="12.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="1086.0"></text>
</g>
<g>
<title>AdaptiveSizePolicy::minor_collection_begin() (2 samples, 0.06%)</title><rect x="1170.3" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>elapsedTimer::stop() (1 samples, 0.03%)</title><rect x="1170.3" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>os::elapsed_frequency() (1 samples, 0.03%)</title><rect x="1170.6" y="1043.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.6" y="1054.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(bool) (1 samples, 0.03%)</title><rect x="1171.0" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.0" y="1070.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::print_on(outputStream*) const (1 samples, 0.03%)</title><rect x="1171.0" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.0" y="1054.0"></text>
</g>
<g>
<title>PSYoungGen::print_on(outputStream*) const (1 samples, 0.03%)</title><rect x="1171.0" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.0" y="1038.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.03%)</title><rect x="1171.0" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.0" y="1022.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf(char*, unsigned long, char const*, __va_list_tag*, bool, unsigned long&amp;) (1 samples, 0.03%)</title><rect x="1171.0" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.0" y="1006.0"></text>
</g>
<g>
<title>_platform_strchr$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="1171.0" y="979.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1174.0" y="990.0"></text>
</g>
<g>
<title>GCTaskManager::task_idle_workers() (6 samples, 0.17%)</title><rect x="1171.3" y="1059.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.3" y="1070.0"></text>
</g>
<g>
<title>GCTaskManager::add_list(GCTaskQueue*) (6 samples, 0.17%)</title><rect x="1171.3" y="1043.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.3" y="1054.0"></text>
</g>
<g>
<title>SynchronizedGCTaskQueue::enqueue(GCTaskQueue*) (1 samples, 0.03%)</title><rect x="1171.3" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.3" y="1038.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (5 samples, 0.14%)</title><rect x="1171.6" y="1027.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.6" y="1038.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.14%)</title><rect x="1171.6" y="1011.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1174.6" y="1022.0"></text>
</g>
<g>
<title>GCTaskQueue::enqueue(GCTask*) (1 samples, 0.03%)</title><rect x="1173.3" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.3" y="1070.0"></text>
</g>
<g>
<title>MemoryService::gc_begin(bool, bool, bool, bool, bool) (2 samples, 0.06%)</title><rect x="1173.6" y="1059.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.6" y="1070.0"></text>
</g>
<g>
<title>GCMemoryManager::gc_begin(bool, bool, bool) (1 samples, 0.03%)</title><rect x="1173.6" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.6" y="1054.0"></text>
</g>
<g>
<title>SurvivorMutableSpacePool::get_memory_usage() (1 samples, 0.03%)</title><rect x="1173.9" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.9" y="1054.0"></text>
</g>
<g>
<title>PSPromotionManager::pre_scavenge() (1 samples, 0.03%)</title><rect x="1174.2" y="1059.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.2" y="1070.0"></text>
</g>
<g>
<title>PSPromotionManager::reset() (1 samples, 0.03%)</title><rect x="1174.2" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.2" y="1054.0"></text>
</g>
<g>
<title>PSPromotionLAB::initialize(MemRegion) (1 samples, 0.03%)</title><rect x="1174.2" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.2" y="1038.0"></text>
</g>
<g>
<title>StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*) (23 samples, 0.64%)</title><rect x="1174.6" y="1059.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.6" y="1070.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (23 samples, 0.64%)</title><rect x="1174.6" y="1043.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.6" y="1054.0"></text>
</g>
<g>
<title>elapsedTimer::start() (1 samples, 0.03%)</title><rect x="1182.1" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="1070.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.03%)</title><rect x="1182.1" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.1" y="1054.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="1182.1" y="1027.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1185.1" y="1038.0"></text>
</g>
<g>
<title>Threads::create_thread_roots_tasks(GCTaskQueue*) (1 samples, 0.03%)</title><rect x="1182.4" y="1075.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.4" y="1086.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_prologue() (1 samples, 0.03%)</title><rect x="1182.8" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.8" y="1086.0"></text>
</g>
<g>
<title>WatcherThread::run() (21 samples, 0.58%)</title><rect x="1183.1" y="1187.0" width="6.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.1" y="1198.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.06%)</title><rect x="1183.1" y="1171.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.1" y="1182.0"></text>
</g>
<g>
<title>StatSampler::sample_data(PerfDataList*) (1 samples, 0.03%)</title><rect x="1183.4" y="1155.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.4" y="1166.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.03%)</title><rect x="1183.4" y="1139.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.4" y="1150.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.03%)</title><rect x="1183.4" y="1123.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.4" y="1134.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (19 samples, 0.53%)</title><rect x="1183.8" y="1171.0" width="6.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="1182.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (19 samples, 0.53%)</title><rect x="1183.8" y="1155.0" width="6.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (19 samples, 0.53%)</title><rect x="1183.8" y="1139.0" width="6.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.8" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (19 samples, 0.53%)</title><rect x="1183.8" y="1123.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="1134.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.03%)</title><rect x="1184.1" y="1107.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.1" y="1118.0"></text>
</g>
<g>
<title>__psynch_cvwait (17 samples, 0.47%)</title><rect x="1184.4" y="1107.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1187.4" y="1118.0"></text>
</g>
</g>
</svg>
